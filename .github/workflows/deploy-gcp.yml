name: Deploy to Google Cloud (GKE)

on:
  workflow_run:
    workflows: ["Docker Build"]
    types:
      - completed
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: sorrento-cluster
  GKE_ZONE: europe-west1-b
  DEPLOYMENT_NAME: sorrentomarina
  IMAGE: sorrentomarina
  USE_GKE_GCLOUD_AUTH_PLUGIN: True

jobs:
  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker to use gcloud as credential helper
      run: |-
        gcloud --quiet auth configure-docker
        gcloud --quiet auth configure-docker gcr.io
        gcloud --quiet auth configure-docker europe-west1-docker.pkg.dev

    - name: Enable required APIs
      run: |-
        gcloud services enable container.googleapis.com || echo "APIs might already be enabled or billing not configured"
        gcloud services enable containerregistry.googleapis.com || echo "Container Registry API enablement skipped"
        gcloud services enable artifactregistry.googleapis.com || echo "Artifact Registry API enablement skipped"
        gcloud services enable cloudbuild.googleapis.com || echo "Cloud Build API enablement skipped"

    - name: Check if GKE cluster exists
      id: cluster-check
      run: |
        if gcloud container clusters describe $GKE_CLUSTER --zone $GKE_ZONE >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create GKE cluster if not exists
      if: steps.cluster-check.outputs.exists == 'false'
      run: |-
        echo "Creating minimal GKE cluster with e2-micro..."
        gcloud container clusters create "$GKE_CLUSTER" \
          --zone "$GKE_ZONE" \
          --num-nodes 1 \
          --machine-type e2-micro \
          --disk-size 20GB \
          --disk-type pd-standard \
          --enable-ip-alias \
          --network default \
          --logging=NONE \
          --max-pods-per-node 110 \
          --verbosity=info

    - name: Install GKE auth plugin
      run: |-
        echo "Installing GKE auth plugin..."
        sudo apt-get update
        sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin || echo "Plugin may already be available"
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True

    - name: Get GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build application
      run: mvn clean package -DskipTests

    - name: Build and push Docker image to Artifact Registry
      run: |-
        docker build -t "$IMAGE:$GITHUB_SHA" .
        docker tag "$IMAGE:$GITHUB_SHA" "europe-west1-docker.pkg.dev/$PROJECT_ID/sorrentomarina/$IMAGE:$GITHUB_SHA"
        docker tag "$IMAGE:$GITHUB_SHA" "europe-west1-docker.pkg.dev/$PROJECT_ID/sorrentomarina/$IMAGE:latest"
        docker push "europe-west1-docker.pkg.dev/$PROJECT_ID/sorrentomarina/$IMAGE:$GITHUB_SHA"
        docker push "europe-west1-docker.pkg.dev/$PROJECT_ID/sorrentomarina/$IMAGE:latest"

    - name: Update deployment manifest
      run: |-
        sed -i "s|your-account/sorrentomarina:latest|europe-west1-docker.pkg.dev/$PROJECT_ID/sorrentomarina/$IMAGE:$GITHUB_SHA|g" k8s/minimal-deployment.yaml

    - name: Deploy to GKE
      env:
        USE_GKE_GCLOUD_AUTH_PLUGIN: True
      run: |-
        kubectl apply -f k8s/minimal-deployment.yaml
        kubectl wait --for=condition=available deployment/mysql -n sorrentomarina --timeout=300s
        kubectl wait --for=condition=available deployment/sorrentomarina -n sorrentomarina --timeout=300s

    - name: Display deployment info
      env:
        USE_GKE_GCLOUD_AUTH_PLUGIN: True
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üìã Cluster: $GKE_CLUSTER"
        echo "üåê Zone: $GKE_ZONE" 
        echo "üöÄ Project: $PROJECT_ID"
        echo ""
        echo "üìä Current status:"
        kubectl get pods -n sorrentomarina
        kubectl get services -n sorrentomarina
        echo ""
        echo "üîó Get LoadBalancer URL with:"
        echo "kubectl get service sorrentomarina -n sorrentomarina"