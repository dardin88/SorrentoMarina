name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write
  checks: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    name: Build and Test with Java 21
    
    env:
      DB_TYPE: sqlite
      SQLITE_DB_PATH: /tmp/sorrentodb.sqlite

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Setup SQLite database
      run: |
        echo "Setting up SQLite database..."
        sudo apt-get update
        sudo apt-get install -y sqlite3
        
        echo "Creating SQLite database with schema..."
        sqlite3 ${{ env.SQLITE_DB_PATH }} < schema.sql
        
        echo "Verifying database setup..."
        sqlite3 ${{ env.SQLITE_DB_PATH }} "SELECT COUNT(*) FROM LIDO;"
        echo "SQLite database initialized successfully"

    - name: Run tests
      run: mvn clean test

    - name: Generate JaCoCo report
      run: mvn jacoco:report

    - name: Generate test report
      uses: dorny/test-reporter@v2
      if: success() || failure()
      with:
        name: Maven Test Results
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: success() || failure()
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./target/surefire-reports/TEST-*.xml

    - name: Run PiTest mutation testing
      run: mvn org.pitest:pitest-maven:mutationCoverage
      continue-on-error: true

    - name: Prepare reports for GitHub Pages
      if: github.ref == 'refs/heads/main' && always()
      run: |
        mkdir -p github-pages/PiTest
        mkdir -p github-pages/Jacoco
        cp -r target/pit-reports/* github-pages/PiTest/
        cp -r target/site/jacoco/* github-pages/Jacoco/

    - name: Deploy reports to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      if: github.ref == 'refs/heads/main' && always()
      with:
        path: ./github-pages

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      if: github.ref == 'refs/heads/main' && always()
      id: deployment

    - name: Build application
      run: mvn package -DskipTests

    - name: Upload WAR artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: sorrentomarina-${{ github.sha }}
        path: target/SorrentoMarina-1.0.war
        retention-days: 30